Syed Maisam Abbas - 501103255

Requirment 1:

QUESTION 1:

Suppose that towers(5, 2, 3) is invoked.

1.      How will the first recursive call to towers() be invoked? Answer this question in the form: towers(x, y, z) where you give the actual values to the three parameters.

2.      How many recursive calls to towers() will be made before this first recursive call actually returns to the initial invocation?

3.      Once towers(5, 2, 3) has invoked its first recursive call to towers() and this invocation has returned, what will be printed to stdout? (i.e. What actual move will be made by towers(5, 2, 3) ?)

4.      How will the second recursive call to towers() be invoked? Answer this question in the form: towers(x, y, z) where you give the actual values to the three parameters.

ANSWER: 

1. If towers(5,2,3) is invoked then the first recursive call to towers() will diplsay the output towers(4,2,1). Where 4 is the tower number, 2 is the starting location, and 1 is the final location.

2. 5 recursive calls will be made before the returning the inital invokation. 

3. After towers(5,2,3) is invoked, the first recursive call to towers() will print "..........Move #1: From Tower 2 to Tower 3" to stdout. This means that the disk will be moved from tower 2 to tower 3.

4. If towers(5,2,3) is invoked the second recursive call to towers() will display the output towers(3,2,3). Where 3 is the tower number, 2 is the inital location, and 3 is the final location. 

QUESTION 2:

Suppose that towers(8, 1, 2) is invoked. How many lines will be printed to stdout?

ANSWER:

Assuming that towers(8,1,2) is invoked, the program will execute 255 lines.

Requirment 2:

In this lab, the objective is to reorganize the stacked disks, however only the uppermost disk can be moved at a time. After executing the given commands, the outputs are analyzed and recorded in this README file.

